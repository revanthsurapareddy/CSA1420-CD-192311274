#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define MAX 100
char precedenceTable[5][5] = {
    {'>', '<', '<', '<', '>'},  // + row
    {'>', '>', '<', '<', '>'},  // * row
    {'>', '>', '>', '<', ' '},  // id row
    {'<', '<', '<', '<', '='},  // ( row
    {'>', '>', '>', ' ', ' '}   // ) row
};

int precedence(char op1, char op2) {
    int row, col;

    if (op1 == '+' || op1 == '*') {
        row = (op1 == '+') ? 0 : 1;
    } else if (op1 == 'i') {
        row = 2;  // id
    } else if (op1 == '(') {
        row = 3;
    } else {
        row = 4;
    }

    if (op2 == '+' || op2 == '*') {
        col = (op2 == '+') ? 0 : 1;
    } else if (op2 == 'i') {
        col = 2;
    } else if (op2 == '(') {
        col = 3;
    } else {
        col = 4;
    }

    return precedenceTable[row][col];
}

// Stack operations
char stack[MAX];
int top = -1;

void push(char op) {
    if (top < MAX - 1) {
        stack[++top] = op;
    } else {
        printf("Stack overflow\n");
        exit(1);
    }
}

char pop() {
    if (top >= 0) {
        return stack[top--];
   
